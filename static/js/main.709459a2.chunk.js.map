{"version":3,"sources":["components/Currentstats.js","components/Banner.js","App.js","index.js"],"names":["Currentstats","numberWithCommas","num","toString","replace","className","this","props","global","totalConfirmed","totalRecovered","totalDeath","Component","headerStyle","background","color","textAlign","padding","Banner","style","App","state","countries","options","country","toggleFun","e","setState","filter","value","axios","get","then","res","scope","total","recovered","death","stateJSON","data","Global","TotalConfirmed","TotalRecovered","TotalDeaths","countriesvar","Countries","i","length","countryJSON","Country","onChange","placeholder","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAmCeA,G,kNA/BXC,iBAAkB,SAACC,GAEf,OAAOA,EAAIC,WAAWC,QAAQ,wBAAyB,M,uDAIvD,OACI,6BACI,yBAAKC,UAAY,kBACb,0BAAMA,UAAY,gBACd,wBAAIA,UAAY,aAAhB,mBACEC,KAAKC,MAAMC,OAAOC,gBAExB,+BACA,0BAAMJ,UAAY,gBACd,wBAAIA,UAAY,aAAhB,mBACEC,KAAKC,MAAMC,OAAOE,gBAExB,+BACA,0BAAML,UAAY,gBACd,wBAAIA,UAAY,aAAhB,eACEC,KAAKC,MAAMC,OAAOG,kB,GAtBjBC,cCO3B,IAAMC,EAAc,CAChBC,WAAY,OACZC,MAAO,OACPC,UAAW,SACXC,QAAS,QAGEC,EAff,WACI,OACI,4BAAQC,MAASN,GACb,gD,uBCoGGO,MAjGf,4MACEC,MAAQ,CACNb,OAAQ,GACRc,UAAW,GACXC,QAAS,GACTC,QAAS,IALb,EAQEC,UAAY,SAACC,GAMX,EAAKC,SAAS,CAAEH,QAAS,EAAKH,MAAMC,UAAUM,QAAO,SAAAC,GAAK,OAAIA,EAAML,UAAYE,EAAEG,YAdtF,kEAkBuB,IAAD,OAElBC,IAAMC,IAAI,sCACTC,MAAK,SAAAC,GAEJ,IAuDcC,EAAOC,EAAOC,EAAWC,EAvDnCC,GAuDUJ,EAvDa,gBAuDNC,EAvDuBF,EAAIM,KAAKC,OAAOC,eAuDhCL,EAvDgDH,EAAIM,KAAKC,OAAOE,eAuDrDL,EAvDsEJ,EAAIM,KAAKC,OAAOG,YAwD1H,CACLnB,QAASU,EACTzB,eAAgB0B,EAChBzB,eAAgB0B,EAChBzB,WAAY0B,IA1DV,EAAKV,SAAS,CAACnB,OAAQ8B,IACvB,EAAKX,SAAS,CAACH,QAASc,IAExB,IADA,IA4DqBd,EA5DjBoB,EAAeX,EAAIM,KAAKM,UACnBC,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IAAK,CAC5C,IAAIE,EA4DH,CACLxB,SAHuBA,EA1DiBoB,EAAaE,IA6DpCG,QACjBxC,eAAgBe,EAAQiB,eACxB/B,eAAgBc,EAAQkB,eACxB/B,WAAYa,EAAQmB,aA9DhB,EAAKhB,SAAS,CAACJ,QAAQ,GAAD,mBAAM,EAAKF,MAAME,SAAjB,CAA0BqB,EAAaE,GAAGG,YAChE,EAAKtB,SAAS,CAACL,UAAU,GAAD,mBAAM,EAAKD,MAAMC,WAAjB,CAA4B0B,YAhC5D,+BAmEI,OACE,6BACE,kBAAC,EAAD,CAAQd,MAAU5B,OAClB,kBAAC,EAAD,CAAcE,OAAWF,KAAKe,MAAMG,UAEpC,kBAAC,IAAD,CAAUD,QAASjB,KAAKe,MAAME,QAAS2B,SAAU5C,KAAKmB,UAAWI,MAN/C,iBAMqEsB,YAAY,mBAAmBC,KAAO,YAJ/H,SApEN,GAAyBxC,aCHzByC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.709459a2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Currentstats.css';\r\n\r\nclass Currentstats extends Component {\r\n    numberWithCommas= (num) => {\r\n        // debugger\r\n        return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    render() {\r\n        // {debugger}\r\n        return (\r\n            <div>\r\n                <div className = \"grid-container\">\r\n                    <span className = \"grid-element\">\r\n                        <h4 className = \"textStyle\">Total Confirmed</h4>\r\n                        { this.props.global.totalConfirmed }\r\n                    </span>\r\n                    <span></span>\r\n                    <span className = \"grid-element\">\r\n                        <h4 className = \"textStyle\">Total Recovered</h4>\r\n                        { this.props.global.totalRecovered }\r\n                    </span>\r\n                    <span></span>\r\n                    <span className = \"grid-element\">\r\n                        <h4 className = \"textStyle\">Total Death</h4>\r\n                        { this.props.global.totalDeath }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Currentstats\r\n","import React from 'react';\r\n\r\nfunction Banner() {\r\n    return (\r\n        <header style = {headerStyle}>\r\n            <h1>COVID19Tracker</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nexport default Banner;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Currentstats from './components/Currentstats';\nimport Banner from './components/Banner';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nexport class App extends Component {\n  state = {\n    global: [],\n    countries: [],\n    options: [],\n    country: ''\n  }\n  \n  toggleFun = (e) => { \n    // let currentShow = this.state.countries.map((value) => {\n    //   if(value.Country === e.value) {\n    //     return value;\n    //   }\n    // });\n    this.setState({ country: this.state.countries.filter(value => value.country === e.value) });\n    // debugger;\n  };\n\n  componentDidMount() {\n    // debugger\n    axios.get('https://api.covid19api.com/summary')\n    .then(res => {\n      // debugger\n      let stateJSON = createJSON(\"Global Status\", res.data.Global.TotalConfirmed, res.data.Global.TotalRecovered , res.data.Global.TotalDeaths);\n      // debugger;\n      this.setState({global: stateJSON});\n      this.setState({country: stateJSON});\n      let countriesvar = res.data.Countries;\n      for (var i = 0; i < countriesvar.length; i++) {\n        let countryJSON = createCountryJSON(countriesvar[i])\n        // options.push(countriesvar[i].Country);\n        this.setState({options: [...this.state.options, countriesvar[i].Country]});\n        this.setState({countries: [...this.state.countries, countryJSON] });\n      }\n      // debugger;\n    });\n    // debugger\n    // axios.get('https://api.covid19api.com/summary')\n    // .then(res => { \n      // let countries = res.data.Countries;\n      // debugger;\n      // countries.map((value) => {\n      //   this.setState({countries: [...this.state.countries, value]})\n      // })\n      // let i=0;\n      // countries.map((value) =>{\n      //   let x = {};\n      //   let y = {Country, TotalConfirmed};\n      //   x['id'] = i;\n      //   x['Country'] = String(value.Country);\n      //   x['TotalConfirmed'] = String(value.TotalConfirmed);\n      //   y.Country = x['Country'];\n      //   y.TotalConfirmed = x['TotalConfirmed'];\n      //   // y['0'] = x;\n\n      //   debugger\n      //   this.setState({countries: [...this.state.countries, y]})\n      //   debugger\n      //   i++;\n      // })\n      // debugger\n      // this.setState({ countries: countries})\n    // });\n  }\n\n  render() {\n    const defaultOption = \"Choose a value\"\n    return (\n      <div>\n        <Banner scope = { this} />\n        <Currentstats global = { this.state.country } />\n        {/* {this.state.countries.map((value) => {if(value.country === \"Afghanistan\") return value.totalConfirmed;})} */}\n        <Dropdown options={this.state.options} onChange={this.toggleFun} value={defaultOption} placeholder=\"Select an option\" name = \"country\" />;\n      </div>\n    )\n  }\n}\n\nfunction createJSON(scope, total, recovered, death) {\n  return {\n    country: scope,\n    totalConfirmed: total,\n    totalRecovered: recovered,\n    totalDeath: death\n  }\n}\n\nfunction createCountryJSON(country) {\n\n  return {\n    country: country.Country,\n    totalConfirmed: country.TotalConfirmed,\n    totalRecovered: country.TotalRecovered,\n    totalDeath: country.TotalDeaths\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}