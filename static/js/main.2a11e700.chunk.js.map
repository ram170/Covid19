{"version":3,"sources":["components/Currentstats.js","components/Banner.js","App.js","index.js"],"names":["Currentstats","numberWithCommas","num","toString","replace","className","this","props","global","country","totalConfirmed","totalRecovered","totalDeath","Component","headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Banner","style","to","App","state","countries","options","toggleFun","e","setState","filter","value","axios","get","then","res","scope","total","recovered","death","stateJSON","data","Global","TotalConfirmed","TotalRecovered","TotalDeaths","countriesvar","Countries","i","length","countryJSON","Country","exact","path","render","Fragment","onChange","placeholder","name","ReactDOM","StrictMode","document","getElementById"],"mappings":"wSAoCeA,G,kNAhCXC,iBAAkB,SAACC,GAEf,OAAOA,EAAIC,WAAWC,QAAQ,wBAAyB,M,uDAIvD,OACI,6BACI,6BACA,4BAAQC,UAAY,aAAaC,KAAKC,MAAMC,OAAOC,SACnD,yBAAKJ,UAAY,kBACb,0BAAMA,UAAY,gBACd,wBAAIA,UAAY,aAAhB,mBACEC,KAAKC,MAAMC,OAAOE,gBAExB,+BACA,0BAAML,UAAY,gBACd,wBAAIA,UAAY,aAAhB,mBACEC,KAAKC,MAAMC,OAAOG,gBAExB,+BACA,0BAAMN,UAAY,gBACd,wBAAIA,UAAY,aAAhB,eACEC,KAAKC,MAAMC,OAAOI,kB,GAxBjBC,cCS3B,IAAMC,EAAc,CAChBC,WAAY,OACZC,MAAO,OACPC,UAAW,SACXC,QAAS,QAGPC,EAAY,CACdH,MAAO,OACPI,eAAgB,QAILC,EAtBf,WACI,OACI,4BAAQC,MAASR,GACb,8CACA,kBAAC,IAAD,CAAMQ,MAAUH,EAAYI,GAAG,mBAA/B,U,uBC0GGC,MAxGf,4MACEC,MAAQ,CACNjB,OAAQ,GACRkB,UAAW,GACXC,QAAS,GACTlB,QAAS,IALb,EAQEmB,UAAY,SAACC,GAMX,EAAKC,SAAS,CAAErB,QAAS,EAAKgB,MAAMC,UAAUK,QAAO,SAAAC,GAAK,OAAIA,EAAMvB,UAAYoB,EAAEG,SAAO,MAd7F,kEAkBuB,IAAD,OAElBC,IAAMC,IAAI,sCACTC,MAAK,SAAAC,GAEJ,IA8DcC,EAAOC,EAAOC,EAAWC,EA9DnCC,GA8DUJ,EA9Da,gBA8DNC,EA9DuBF,EAAIM,KAAKC,OAAOC,eA8DhCL,EA9DgDH,EAAIM,KAAKC,OAAOE,eA8DrDL,EA9DsEJ,EAAIM,KAAKC,OAAOG,YA+D1H,CACLrC,QAAS4B,EACT3B,eAAgB4B,EAChB3B,eAAgB4B,EAChB3B,WAAY4B,IAjEV,EAAKV,SAAS,CAACtB,OAAQiC,IACvB,EAAKX,SAAS,CAACrB,QAASgC,IAExB,IADA,IAmEqBhC,EAnEjBsC,EAAeX,EAAIM,KAAKM,UACnBC,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IAAK,CAC5C,IAAIE,EAmEH,CACL1C,SAHuBA,EAjEiBsC,EAAaE,IAoEpCG,QACjB1C,eAAgBD,EAAQmC,eACxBjC,eAAgBF,EAAQoC,eACxBjC,WAAYH,EAAQqC,aArEhB,EAAKhB,SAAS,CAACH,QAAQ,GAAD,mBAAM,EAAKF,MAAME,SAAjB,CAA0BoB,EAAaE,GAAGG,YAChE,EAAKtB,SAAS,CAACJ,UAAU,GAAD,mBAAM,EAAKD,MAAMC,WAAjB,CAA4ByB,YAhC5D,+BAiEY,IAAD,OAEP,OACE,kBAAC,IAAD,KACE,yBAAK9C,UAAY,OACf,kBAAC,EAAD,CAAQgC,MAAU/B,OAClB,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,SAAAhD,GAAK,OAC/C,kBAAC,IAAMiD,SAAP,KACE,kBAAC,EAAD,CAAchD,OAAW,EAAKiB,MAAMhB,UAEpC,6BACA,kBAAC,IAAD,CAAUkB,QAAS,EAAKF,MAAME,QAAS8B,SAAU,EAAK7B,UAAWI,MAVrD,qBAU2E0B,YAAY,mBAAmBC,KAAO,YAJ/H,cAxEZ,GAAyB9C,aCJzB+C,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2a11e700.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Currentstats.css';\r\n\r\nclass Currentstats extends Component {\r\n    numberWithCommas= (num) => {\r\n        // debugger\r\n        return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    render() {\r\n        // {debugger}\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <center className = \"textStyle\">{this.props.global.country}</center>\r\n                <div className = \"grid-container\">\r\n                    <span className = \"grid-element\">\r\n                        <h4 className = \"textStyle\">Total Confirmed</h4>\r\n                        { this.props.global.totalConfirmed }\r\n                    </span>\r\n                    <span></span>\r\n                    <span className = \"grid-element\">\r\n                        <h4 className = \"textStyle\">Total Recovered</h4>\r\n                        { this.props.global.totalRecovered }\r\n                    </span>\r\n                    <span></span>\r\n                    <span className = \"grid-element\">\r\n                        <h4 className = \"textStyle\">Total Death</h4>\r\n                        { this.props.global.totalDeath }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Currentstats\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Banner() {\r\n    return (\r\n        <header style = {headerStyle}>\r\n            <h1>COVID19Tracker</h1>\r\n            <Link style = { linkStyle } to=\"/covid19tracker\">Home</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\n\r\nexport default Banner;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport Currentstats from './components/Currentstats';\nimport Banner from './components/Banner';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nexport class App extends Component {\n  state = {\n    global: [],\n    countries: [],\n    options: [],\n    country: ''\n  }\n  \n  toggleFun = (e) => { \n    // let currentShow = this.state.countries.map((value) => {\n    //   if(value.Country === e.value) {\n    //     return value;\n    //   }\n    // });\n    this.setState({ country: this.state.countries.filter(value => value.country === e.value)[0] });\n    debugger;\n  };\n\n  componentDidMount() {\n    // debugger\n    axios.get('https://api.covid19api.com/summary')\n    .then(res => {\n      // debugger\n      let stateJSON = createJSON(\"Global Status\", res.data.Global.TotalConfirmed, res.data.Global.TotalRecovered , res.data.Global.TotalDeaths);\n      // debugger;\n      this.setState({global: stateJSON});\n      this.setState({country: stateJSON});\n      let countriesvar = res.data.Countries;\n      for (var i = 0; i < countriesvar.length; i++) {\n        let countryJSON = createCountryJSON(countriesvar[i])\n        // options.push(countriesvar[i].Country);\n        this.setState({options: [...this.state.options, countriesvar[i].Country]});\n        this.setState({countries: [...this.state.countries, countryJSON] });\n      }\n      // debugger;\n    });\n    // debugger\n    // axios.get('https://api.covid19api.com/summary')\n    // .then(res => { \n      // let countries = res.data.Countries;\n      // debugger;\n      // countries.map((value) => {\n      //   this.setState({countries: [...this.state.countries, value]})\n      // })\n      // let i=0;\n      // countries.map((value) =>{\n      //   let x = {};\n      //   let y = {Country, TotalConfirmed};\n      //   x['id'] = i;\n      //   x['Country'] = String(value.Country);\n      //   x['TotalConfirmed'] = String(value.TotalConfirmed);\n      //   y.Country = x['Country'];\n      //   y.TotalConfirmed = x['TotalConfirmed'];\n      //   // y['0'] = x;\n\n      //   debugger\n      //   this.setState({countries: [...this.state.countries, y]})\n      //   debugger\n      //   i++;\n      // })\n      // debugger\n      // this.setState({ countries: countries})\n    // });\n  }\n\n  render() {\n    const defaultOption = \"Choose a country..\"\n    return (\n      <Router>\n        <div className = \"App\">\n          <Banner scope = { this} />\n          <Route exact path=\"/covid19tracker\" render={props => (\n            <React.Fragment>\n              <Currentstats global = { this.state.country } />\n              {/* {this.state.countries.map((value) => {if(value.country === \"Afghanistan\") return value.totalConfirmed;})} */}\n              <br></br>\n              <Dropdown options={this.state.options} onChange={this.toggleFun} value={defaultOption} placeholder=\"Select an option\" name = \"country\" />;\n            </React.Fragment>\n          )} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nfunction createJSON(scope, total, recovered, death) {\n  return {\n    country: scope,\n    totalConfirmed: total,\n    totalRecovered: recovered,\n    totalDeath: death\n  }\n}\n\nfunction createCountryJSON(country) {\n\n  return {\n    country: country.Country,\n    totalConfirmed: country.TotalConfirmed,\n    totalRecovered: country.TotalRecovered,\n    totalDeath: country.TotalDeaths\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}