{"version":3,"sources":["components/Currentstats.js","components/Banner.js","components/Hotspots.js","components/About.js","App.js","index.js"],"names":["Currentstats","numberWithCommas","num","toString","replace","className","this","props","global","country","value","totalConfirmed","thousandSeparator","displayType","renderText","totalRecovered","totalDeath","Component","headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Banner","style","to","src","Hotspots","width","height","data","hotspots","options","maintainAspectRatio","About","createHotspot","totalPop","totalRec","labels","datasets","label","backgroundColor","App","state","countries","toggleFun","e","setState","filter","defaultOption","max1","max2","max3","first","second","third","axios","get","then","res","scope","total","recovered","death","stateJSON","Global","TotalConfirmed","TotalRecovered","TotalDeaths","countriesvar","Countries","i","length","countryJSON","Country","chartCountry","chartTotalPop","chartTotalRec","chartTotalDeath","chartValues","push","exact","path","render","Fragment","onChange","placeholder","name","ReactDOM","StrictMode","document","getElementById"],"mappings":"4OA6DeA,E,4MA5CXC,iBAAkB,SAACC,GAEf,OAAOA,EAAIC,WAAWC,QAAQ,wBAAyB,M,uDAIvD,OACI,6BAEI,6BACA,gCAAQ,0BAAMC,UAAY,YAAYC,KAAKC,MAAMC,OAAOC,QAAhD,MACR,6BACA,yBAAKJ,UAAY,kBACb,+BACA,+BACA,0BAAMA,UAAY,0BACd,wBAAIA,UAAY,aAAhB,mBAEA,kBAAC,IAAD,CAAcK,MAAUJ,KAAKC,MAAMC,OAAOG,eAAiBC,mBAAsB,EAAOC,YAAgB,OAASC,WAAa,SAAAJ,GAAK,OAAI,6BAAMA,OAGjJ,0BAAML,UAAY,0BACd,wBAAIA,UAAY,aAAhB,mBAEA,kBAAC,IAAD,CAAcK,MAAUJ,KAAKC,MAAMC,OAAOO,eAAiBH,mBAAsB,EAAOC,YAAgB,OAASC,WAAa,SAAAJ,GAAK,OAAI,6BAAMA,QAIrJ,6BACA,yBAAKL,UAAY,wBACb,+BACA,+BACA,0BAAMA,UAAY,sBACd,wBAAIA,UAAY,aAAhB,eAEA,kBAAC,IAAD,CAAcK,MAAUJ,KAAKC,MAAMC,OAAOQ,WAAaJ,mBAAsB,EAAOC,YAAgB,OAASC,WAAa,SAAAJ,GAAK,OAAI,6BAAMA,a,GAhDtIO,a,MCmC3B,IAAMC,EAAc,CAChBC,WAAY,OACZC,MAAO,OACPC,UAAW,SACXC,QAAS,QAGPC,EAAY,CACdH,MAAO,OACPI,eAAgB,QAILC,EAhDf,WACI,OACI,4BAAQC,MAASR,GACb,8CACA,yBAAMb,UAAY,UACd,0BAAMA,UAAY,SAClB,kBAAC,IAAD,CAAMqB,MAAUH,EAAYI,GAAG,mBAE3B,yBAAKC,IAAK,oDAAoDvB,UAAY,SAK9E,0BAAMA,UAAY,aAAlB,OACA,kBAAC,IAAD,CAAMqB,MAAUH,EAAYI,GAAG,4BAM3B,yBAAKC,IAAI,+DAA+DvB,UAAY,SAKxF,0BAAMA,UAAY,aAAlB,OACA,kBAAC,IAAD,CAAMqB,MAAUH,EAAYI,GAAG,yBAC/B,yBAAKC,IAAI,yDAAyDvB,UAAY,kB,yBCJ/EwB,EAvBf,uKAGQ,OACI,6BACI,6BACA,gCAAQ,0BAAMxB,UAAU,YAAhB,UACR,6BACA,kBAAC,IAAD,CACAyB,MAAO,IACPC,OAAQ,IACRC,KAAQ1B,KAAKC,MAAM0B,SACnBC,QAAS,CACLC,qBAAqB,KAGzB,6BACA,uCAAY,2FAjB5B,GAA8BlB,aCSfmB,EAXf,uKAEQ,OACI,6BACI,6BACA,gCAAQ,kGALxB,GAA2BnB,a,OCwL3B,SAASoB,EAAc5B,EAAS6B,EAAUC,EAAUvB,GAClD,MAAO,CACLwB,OAAQ/B,EACRgC,SAAU,CACR,CACAC,MAAO,kBACPV,KAAMM,EACNK,gBAEE,2BAOF,CACED,MAAO,kBACPV,KAAMO,EACNI,gBAAiB,yBAEnB,CACED,MAAO,cACPV,KAAMhB,EACN2B,gBAAiB,wBAMVC,MA7Mf,kDACE,aAAgB,IAAD,8BACb,gBASFC,MAAQ,CACNrC,OAAQ,GACRsC,UAAW,GACXZ,QAAS,GACTzB,QAAS,GACTwB,SAAU,IAfG,EAkBfc,UAAY,SAACC,GAMK,kBAAZA,EAAEtC,MACJ,EAAKuC,SAAS,CAAExC,QAAS,EAAKoC,MAAMrC,SAGpC,EAAKyC,SAAS,CAAExC,QAAS,EAAKoC,MAAMC,UAAUI,QAAO,SAAAxC,GAAK,OAAIA,EAAMD,UAAYuC,EAAEtC,SAAO,KAE3F,EAAKyC,cAAgBH,EAAEtC,OA5BvB,EAAKyC,cAAgB,qBACrB,EAAKC,MAAQ,EACb,EAAKC,MAAQ,EACb,EAAKC,MAAQ,EACb,EAAKC,MAAQ,KACb,EAAKC,OAAS,KACd,EAAKC,MAAQ,KARA,EADjB,gEAmCuB,IAAD,OAElBC,IAAMC,IAAI,sCACTC,MAAK,SAAAC,GACJ,IAsHcC,EAAOC,EAAOC,EAAWC,EAtHnCC,GAsHUJ,EAtHa,gBAsHNC,EAtHuBF,EAAI7B,KAAKmC,OAAOC,eAsHhCJ,EAtHgDH,EAAI7B,KAAKmC,OAAOE,eAsHrDJ,EAtHsEJ,EAAI7B,KAAKmC,OAAOG,YAuH1H,CACL7D,QAASqD,EACTnD,eAAgBoD,EAChBhD,eAAgBiD,EAChBhD,WAAYiD,IA1HV,EAAKhB,SAAS,CAACzC,OAAQ0D,IACvB,EAAKjB,SAAS,CAACxC,QAASyD,IACxB,IA4HqBzD,EA5HjB8D,EAAeV,EAAI7B,KAAKwC,UAC5B,EAAKvB,SAAS,CAACf,QAAQ,GAAD,mBAAM,EAAKW,MAAMX,SAAjB,CAA0B,EAAKW,MAAMrC,OAAOC,YAClE,IAAK,IAAIgE,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IAAK,CACxCF,EAAaE,GAAGL,eAAiB,EAAKhB,MACxC,EAAKG,MAAQgB,EAAaE,GAC1B,EAAKrB,KAAOmB,EAAaE,GAAGL,gBACnBG,EAAaE,GAAGL,eAAiB,EAAKf,MAC/C,EAAKG,OAASe,EAAaE,GAC3B,EAAKpB,KAAOkB,EAAaE,GAAGL,gBAErBG,EAAaE,GAAGL,eAAiB,EAAKd,OAC7C,EAAKG,MAAQc,EAAaE,GAC1B,EAAKnB,KAAOiB,EAAaE,GAAGL,gBAE9B,IAAIO,EA+GH,CACLlE,SAFuBA,EA9GiB8D,EAAaE,IAgHpCG,QACjBjE,eAAgBF,EAAQ2D,eACxBrD,eAAgBN,EAAQ4D,eACxBrD,WAAYP,EAAQ6D,aAjHhB,EAAKrB,SAAS,CAACf,QAAQ,GAAD,mBAAM,EAAKW,MAAMX,SAAjB,CAA0BqC,EAAaE,GAAGG,YAChE,EAAK3B,SAAS,CAACH,UAAU,GAAD,mBAAM,EAAKD,MAAMC,WAAjB,CAA4B6B,MAEtD,IAAIE,EAAe,GACfC,EAAgB,GAChBC,EAAgB,GAChBC,EAAkB,GAClBC,EAAc,GAClBA,EAAYC,KAAK,EAAK3B,OACtB0B,EAAYC,KAAK,EAAK1B,QACtByB,EAAYC,KAAK,EAAKzB,OACtB,IAAM,IAAIgB,EAAI,EAAGA,EAAIQ,EAAYP,OAAQD,IACvCI,EAAaK,KAAKD,EAAYR,GAAGG,SACjCE,EAAcI,KAAKD,EAAYR,GAAGL,gBAClCW,EAAcG,KAAKD,EAAYR,GAAGJ,gBAClCW,EAAgBE,KAAKD,EAAYR,GAAGH,aAEtC,EAAKrB,SAAS,CAAChB,SAAS,GAAD,mBAAM,EAAKY,MAAMZ,UAAjB,CAA0BI,EAAcwC,EAAcC,EAAeC,EAAeC,YA3EjH,+BA2GY,IAAD,OACP,OACE,kBAAC,IAAD,KACE,yBAAK3E,UAAY,OACf,kBAAC,EAAD,CAAQyD,MAAUxD,OAClB,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,SAAA9E,GAAK,OAC/C,kBAAC,IAAM+E,SAAP,KACE,kBAAC,EAAD,CAAc9E,OAAW,EAAKqC,MAAMpC,UAEpC,6BACA,6BACA,yBAAKJ,UAAY,uBACf,yBAAKA,UAAY,cACjB,yBAAKA,UAAY,sBACf,kBAAC,IAAD,CAAU6B,QAAS,EAAKW,MAAMX,QAASqD,SAAU,EAAKxC,UAAWrC,MAAO,EAAKyC,cAAeqC,YAAY,mBAAmBC,KAAO,aAEpI,yBAAKpF,UAAY,eAEnB,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,iCAGJ,kBAAC,IAAD,CAAO+E,KAAK,2BAA2BC,OAAQ,SAAA9E,GAAK,OAClD,kBAAC,IAAM+E,SAAP,KACE,kBAAC,EAAD,CAAUrD,SAAa,EAAKY,MAAMZ,SAAS,SAG/C,kBAAC,IAAD,CAAOmD,KAAK,wBAAwBC,OAAQ,SAAA9E,GAAK,OAC/C,kBAAC,IAAM+E,SAAP,KACE,kBAAC,EAAD,gBApJd,GAAyBrE,aCNzByE,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.21391a49.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Currentstats.css';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nclass Currentstats extends Component {\r\n    // state = {\r\n    //     values: []\r\n    // }\r\n    // setValue = () => {\r\n    //     this.setState( {values: [...this.state.values,this.props.global.totalConfirmed]});\r\n    //     console.log(this.state.values,this.props.global.totalConfirmed,this.props.global.totalConfirmed);\r\n    //     this.setState( {values: [...this.state.values,this.props.global.totalDeath]});\r\n    //     this.setState( {values: [...this.state.values,this.props.global.totalRecovered]});\r\n    //     console.log(\"here\")\r\n    //     console.log(this.state.values)\r\n    //     // debugger\r\n    // }\r\n    numberWithCommas= (num) => {\r\n        // debugger;\r\n        return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    render() {\r\n        // {debugger}\r\n        return (\r\n            <div>\r\n                {/* {this.setValue()} */}\r\n                <br></br>\r\n                <center><span className = \"mainText\">{this.props.global.country} </span></center>\r\n                <br></br>\r\n                <div className = \"grid-container\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span className = \"grid-element confirmed\">\r\n                        <h4 className = \"textStyle\">Total Confirmed</h4>\r\n                        {/* { this.props.global.totalConfirmed } */}\r\n                        <NumberFormat value = { this.props.global.totalConfirmed } thousandSeparator = { true } displayType = { 'text' } renderText={ value => <div>{value}</div>}/>\r\n                    </span>\r\n                    {/* <span></span> */}\r\n                    <span className = \"grid-element recovered\">\r\n                        <h4 className = \"textStyle\">Total Recovered</h4>\r\n                        {/* { this.props.global.totalRecovered } */}\r\n                        <NumberFormat value = { this.props.global.totalRecovered } thousandSeparator = { true } displayType = { 'text' } renderText={ value => <div>{value}</div>}/>\r\n                    </span>\r\n                    {/* <span></span> */}\r\n                </div>\r\n                <br></br>\r\n                <div className = \"grid-container-death\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span className = \"grid-element death\">\r\n                        <h4 className = \"textStyle\">Total Death</h4>\r\n                        {/* { this.props.global.totalDeath } */}\r\n                        <NumberFormat value = { this.props.global.totalDeath } thousandSeparator = { true } displayType = { 'text' } renderText={ value => <div>{value}</div>}/>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Currentstats\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n    return (\r\n        <header style = {headerStyle}>\r\n            <h1>COVID19Tracker</h1>\r\n            <div  className = \"navbar\">\r\n                <span className = \"icons\">\r\n                <Link style = { linkStyle } to=\"/covid19tracker\">\r\n                    {/* old house */}\r\n                    <img src= \"https://img.icons8.com/clouds/100/000000/home.png\" className = \"img\"></img>\r\n                    {/* Neon house */}\r\n                    {/* <img src=\"https://img.icons8.com/nolan/64/home.png\" className = \"img\"/> */}\r\n                    {/* <img src=\"https://img.icons8.com/ultraviolet/40/000000/home-page.png\" className = \"img\"/> */}\r\n                </Link>\r\n                <span className = \"seperator\"> | </span>\r\n                <Link style = { linkStyle } to=\"/covid19tracker/hotspots\">\r\n                    {/* Fire icon link  */}\r\n                    {/* <img src=\"https://lh6.googleusercontent.com/proxy/jvouw-usLvVGkCvIcwQeBGU97Vb12Jhd64TgENsLv0NOJN0LyehcajyqpPklT566_4YOiLSitBT_OcGXQDrgJzEIml1AoeGMgs9FG3fLGLyi\" className = \"imgFire\"></img> */} \r\n                    {/* Pie chart */}\r\n                    {/* <img src=\"https://img.icons8.com/plasticine/100/000000/chart.png\" className = \"img\"/> */}\r\n                    {/* Bar chart */}\r\n                    <img src=\"https://img.icons8.com/plasticine/100/000000/combo-chart.png\" className = \"img\"/>\r\n                    {/* Neon chart */}\r\n                    {/* <img src=\"https://img.icons8.com/nolan/64/rebalance-portfolio.png\" className = \"img2\"/> */}\r\n                    {/* <span className = \"seperator\"> | </span> */}\r\n                </Link>\r\n                <span className = \"seperator\"> | </span>\r\n                <Link style = { linkStyle } to=\"/covid19tracker/about\">\r\n                <img src=\"https://img.icons8.com/plasticine/100/000000/about.png\" className = \"imgAbout\" />\r\n                </Link>\r\n                </span>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\n\r\nexport default Banner;","import React, { Component } from 'react'\r\nimport {Bar, Line, Pie} from 'react-chartjs-2';\r\nimport './Currentstats.css';\r\n\r\nexport class Hotspots extends Component {\r\n    render() {\r\n        {debugger}\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <center><span className=\"mainText\">Top 3</span></center>\r\n                <br></br>\r\n                <Bar \r\n                width={100}\r\n                height={200}\r\n                data = {this.props.hotspots }\r\n                options={{\r\n                    maintainAspectRatio: false\r\n                }}\r\n                />\r\n                <br></br>\r\n                <center>PS: <i>Few values might be insignificant to be shown in chart</i></center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hotspots","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <center><b>Under construction. Details about covid19 will be shown here!</b></center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport Currentstats from './components/Currentstats';\nimport Banner from './components/Banner';\nimport Dropdown from 'react-dropdown';\nimport Hotspots from './components/Hotspots';\nimport About from './components/About';\nimport 'react-dropdown/style.css';\n\nexport class App extends Component {\n  constructor () {\n    super();\n    this.defaultOption = \"Choose a country..\";\n    this.max1 = -1;\n    this.max2 = -1;\n    this.max3 = -1;\n    this.first = null;\n    this.second = null;\n    this.third = null;\n  }\n  state = {\n    global: [],\n    countries: [],\n    options: [],\n    country: '',\n    hotspots: []\n  }\n  \n  toggleFun = (e) => { \n    // let currentShow = this.state.countries.map((value) => {\n    //   if(value.Country === e.value) {\n    //     return value;\n    //   }\n    // });\n    if (e.value === \"Global Status\") {\n      this.setState({ country: this.state.global});\n    }\n    else {\n      this.setState({ country: this.state.countries.filter(value => value.country === e.value)[0] });\n    }\n    this.defaultOption = e.value;\n    // debugger;\n  };\n\n  componentDidMount() {\n    // debugger\n    axios.get('https://api.covid19api.com/summary')\n    .then(res => {\n      let stateJSON = createJSON(\"Global Status\", res.data.Global.TotalConfirmed, res.data.Global.TotalRecovered , res.data.Global.TotalDeaths);\n      this.setState({global: stateJSON});\n      this.setState({country: stateJSON});\n      let countriesvar = res.data.Countries;\n      this.setState({options: [...this.state.options, this.state.global.country]});\n      for (var i = 0; i < countriesvar.length; i++) {\n        if (countriesvar[i].TotalConfirmed > this.max1) {\n          this.first = countriesvar[i];\n          this.max1 = countriesvar[i].TotalConfirmed;\n        } else if (countriesvar[i].TotalConfirmed > this.max2) {\n          this.second = countriesvar[i];\n          this.max2 = countriesvar[i].TotalConfirmed;\n        }\n        else if (countriesvar[i].TotalConfirmed > this.max3) {\n          this.third = countriesvar[i];\n          this.max3 = countriesvar[i].TotalConfirmed;\n        }\n        let countryJSON = createCountryJSON(countriesvar[i])\n        // options.push(countriesvar[i].Country);\n        this.setState({options: [...this.state.options, countriesvar[i].Country]});\n        this.setState({countries: [...this.state.countries, countryJSON] });\n      }\n      let chartCountry = [];\n      let chartTotalPop = [];\n      let chartTotalRec = [];\n      let chartTotalDeath = [];\n      let chartValues = [];\n      chartValues.push(this.first);\n      chartValues.push(this.second);\n      chartValues.push(this.third);\n      for ( let i = 0; i < chartValues.length; i++) {\n        chartCountry.push(chartValues[i].Country);\n        chartTotalPop.push(chartValues[i].TotalConfirmed);\n        chartTotalRec.push(chartValues[i].TotalRecovered);\n        chartTotalDeath.push(chartValues[i].TotalDeaths);\n      }\n      this.setState({hotspots: [...this.state.hotspots,createHotspot(chartCountry, chartTotalPop, chartTotalRec, chartTotalDeath)]});\n      debugger;\n    });\n    // debugger\n    // axios.get('https://api.covid19api.com/summary')\n    // .then(res => { \n      // let countries = res.data.Countries;\n      // debugger;\n      // countries.map((value) => {\n      //   this.setState({countries: [...this.state.countries, value]})\n      // })\n      // let i=0;\n      // countries.map((value) =>{\n      //   let x = {};\n      //   let y = {Country, TotalConfirmed};\n      //   x['id'] = i;\n      //   x['Country'] = String(value.Country);\n      //   x['TotalConfirmed'] = String(value.TotalConfirmed);\n      //   y.Country = x['Country'];\n      //   y.TotalConfirmed = x['TotalConfirmed'];\n      //   // y['0'] = x;\n\n      //   debugger\n      //   this.setState({countries: [...this.state.countries, y]})\n      //   debugger\n      //   i++;\n      // })\n      // debugger\n      // this.setState({ countries: countries})\n    // });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className = \"App\">\n          <Banner scope = { this} />\n          <Route exact path=\"/covid19tracker\" render={props => (\n            <React.Fragment>\n              <Currentstats global = { this.state.country } />\n              {/* {this.state.countries.map((value) => {if(value.country === \"Afghanistan\") return value.totalConfirmed;})} */}\n              <br></br>\n              <br></br>\n              <div className = \"grid-container-main\">\n                <div className = \"grid-item\"></div>\n                <div className = \"grid-item dropdown\">\n                  <Dropdown options={this.state.options} onChange={this.toggleFun} value={this.defaultOption} placeholder=\"Select an option\" name = \"country\" />\n                </div>\n                <div className = \"grid-item\"></div>\n              </div>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n            </React.Fragment>\n          )} />\n          <Route path=\"/covid19tracker/hotspots\" render={props => ( \n            <React.Fragment>\n              <Hotspots hotspots = { this.state.hotspots[0] } />\n            </React.Fragment>  \n          )} />\n          <Route path=\"/covid19tracker/about\" render={props => ( \n            <React.Fragment>\n              <About />\n            </React.Fragment>  \n          )} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nfunction createJSON(scope, total, recovered, death) {\n  return {\n    country: scope,\n    totalConfirmed: total,\n    totalRecovered: recovered,\n    totalDeath: death\n  }\n}\n\nfunction createCountryJSON(country) {\n  return {\n    country: country.Country,\n    totalConfirmed: country.TotalConfirmed,\n    totalRecovered: country.TotalRecovered,\n    totalDeath: country.TotalDeaths\n  }\n}\n\nfunction createHotspot(country, totalPop, totalRec, totalDeath) {\n  return {\n    labels: country,\n    datasets: [\n      {\n      label: 'Total Confirmed',\n      data: totalPop,\n      backgroundColor:\n        // ' rgba(77, 5, 232, 1)',\n        'rgba(54, 162, 235, 0.6)',\n        // 'rgba(255, 206, 86, 0.6)',\n        // 'rgba(75, 192, 192, 0.6)',\n        // 'rgba(153, 102, 255, 0.6)',\n        // 'rgba(255, 159, 64, 0.6)',\n        // 'rgba(255, 99, 132, 0.6)'\n      },\n      {\n        label: 'Total Recovered',\n        data: totalRec,\n        backgroundColor: 'rgba(35, 203, 167, 1)'\n      },\n      {\n        label: 'Total Death',\n        data: totalDeath,\n        backgroundColor: 'rgba(255, 0, 0, 1)'\n      }\n    ]\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}